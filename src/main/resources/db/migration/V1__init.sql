CREATE TABLE IF NOT EXISTS car_types
(
    id          BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name        VARCHAR NOT NULL,
    description VARCHAR NOT NULL
);

insert into car_types(name, description)
values ('Легковой', ''),
       ('Грузовик', '5Т'),
       ('Грузовик', '10Т'),
       ('Грузовик + прицеп', '10Т'),
       ('Грузовик', '20Т'),
       ('Грузовик + прицеп', '20Т'),
       ('Сцепка еврофура', ''),
       ('Сцепка негабарит', ''),
       ('Спецтранспорт', '');

CREATE TABLE map_points
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    approved   BOOLEAN NOT NULL,
    created_at TIMESTAMPTZ DEFAULT current_timestamp
);

insert into map_points(approved, created_at)
VALUES (true, NOW()),
       (false, NOW());

CREATE TABLE map_point_car_type_links
(
    map_point_id BIGINT REFERENCES map_points (id) ON DELETE CASCADE NOT NULL,
    car_type_id  BIGINT REFERENCES car_types (id) ON DELETE CASCADE  NOT NULL,
    PRIMARY KEY (map_point_id, car_type_id)
);

insert into map_point_car_type_links (map_point_id, car_type_id)
VALUES (1, 1),
       (1, 2),
       (2, 3),
       (2, 4);

create view map_point_car_types as
select ct.id as id, ct.name, ct.description, m.map_point_id as map_point_id
from map_point_car_type_links m
         join car_types ct on m.car_type_id = ct.id;

CREATE RULE map_point_car_type_insert_rule AS ON INSERT TO map_point_car_types DO INSTEAD
    INSERT INTO map_point_car_type_links (map_point_id, car_type_id)
    VALUES (NEW.map_point_id, NEW.id);